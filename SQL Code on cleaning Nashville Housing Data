/*

Cleaning Data in SQL Queries

*/

Select *
FROM NashvilleHousing


-- Standardize Date Format

Select SaleDate, CONVERT(Date, SaleDate)
FROM NashvilleHousing

UPDATE NashvilleHousing
SET SaleDate = CONVERT(Date, SaleDate)



-- Populate Property Address data

Select *
FROM NashvilleHousing
--WHERE PropertyAddress IS NULL
ORDER BY ParcelID


SELECT a.ParcelID, a.PropertyAddress, b.ParcelID, b.PropertyAddress, ISNULL (a.PropertyAddress, b.PropertyAddress)
FROM NashvilleHousing a
JOIN NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress IS NULL

UPDATE a
SET PropertyAddress = ISNULL (a.PropertyAddress, b.PropertyAddress)
FROM NashvilleHousing a
JOIN NashvilleHousing b
ON a.ParcelID = b.ParcelID
AND a.UniqueID <> b.UniqueID
WHERE a.PropertyAddress IS NULL



--Breaking out Address into Individual Columns ( Address, City, State)

SELECT PropertyAddress
FROM NashvilleHousing

SELECT SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 ) AS Address
FROM NashvilleHousing


SELECT SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1 , LEN(PropertyAddress)) AS City
FROM NashvilleHousing 

ALTER TABLE NashvilleHousing
ADD PropertySplitAdress nvarchar(50)

UPDATE NashvilleHousing
SET PropertySplitAdress = SUBSTRING(PropertyAddress, 1, CHARINDEX(',', PropertyAddress) -1 )

ALTER TABLE NashvilleHousing
ADD PropertySplitCity nvarchar(50)

UPDATE NashvilleHousing
SET PropertySplitCity = SUBSTRING(PropertyAddress, CHARINDEX(',', PropertyAddress) +1 , LEN(PropertyAddress))


-- Alternatively, we can use a Parsename


SELECT 
PARSENAME (REPLACE (OwnerAddress, ',', '.'), 3),
PARSENAME (REPLACE (OwnerAddress, ',', '.'), 2),
PARSENAME (REPLACE (OwnerAddress, ',', '.'), 1)
FROM NashvilleHousing



ALTER TABLE NashvilleHousing
ADD OwnerSplitAddress nvarchar(50),
OwnerSplitCity nvarchar(50),
OwnerSplitState nvarchar(50)



UPDATE  NashvilleHousing
SET OwnerSplitAddress = PARSENAME (REPLACE (OwnerAddress, ',', '.'), 3)

UPDATE NashvilleHousing
SET OwnerSplitCity = PARSENAME (REPLACE (OwnerAddress, ',', '.'), 2)

UPDATE NashvilleHousing
SET OwnerSplitState = PARSENAME (REPLACE (OwnerAddress, ',', '.'), 1)


SELECT *
FROM NashvilleHousing



-- Change Y and N to Yes and No Respectively in the 'Sold as Vacant' Field

SELECT SoldasVacant, COUNT( SoldAsVacant)
FROM NashvilleHousing
GROUP BY SoldAsVacant

SELECT SoldAsVacant, 
CASE WHEN SoldasVacant = N THEN 'No'
	 WHEN SoldasVacant = Y THEN 'Yes'
	 END AS SoldASVacantUpdated
FROM NashvilleHousing

ALTER TABLE NashvilleHousing
ALTER COLUMN SoldasVacant nvarchar(50)


UPDATE NashvilleHousing
SET SoldasVacant  =  
CASE WHEN SoldasVacant = N THEN 'No'
	 WHEN SoldasVacant = Y THEN 'Yes'
	 END

SELECT *
FROM NashvilleHousing



-- Remove Duplicates


WITH RowNumCTE AS(
Select *, ROW_NUMBER () OVER (
PARTITION BY ParcelID,
			 LandUse,
			 PropertyAddress,
			 SaleDate,
			 SalePrice,
			 LegalReference,
			 OwnerName
			 ORDER BY
				UniqueID DESC) AS RowNumber
FROM NashvilleHousing
)

DELETE
FROM RowNumCTE
WHERE RowNumber > 1



-- Delete Unused Columns

SELECT *
FROM NashvilleHousing

ALTER TABLE NashvilleHousing
DROP COLUMN PropertyAddress, OwnerAddress
